#!/bin/bash

set -x
set -e


# ~/.jib
# kompose
# yamlpath


DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd )"

SPUNK_HOME=$PWD/$( dirname $0 )

pushd $SPUNK_HOME


gen () {
    mkdir -p gen

    docker-compose -f docker-compose.yaml config > docker-compose-resolved.yaml && \
        kompose convert -f docker-compose-resolved.yaml --out gen
    rm docker-compose-resolved.yaml

    finalize
}
finalize () {
    # Get rid of this by fixing the broken string in the docker file.
    yaml-set \
        --change=spec.template.spec.containers.env[name="SPARK_MASTER_URL"].value \
        --value='"spark://spark:7077"' \
        gen/spark-worker-deployment.yaml
    # Configure replication. TODO - move to autoscale.
    yaml-set \
        --change=spec.replicas \
        --value=3 \
        gen/spark-worker-deployment.yaml

    yaml-set \
        --change=spec.template.spec.containers[0].resources.limits.cpu \
        --value=1 \
        gen/spark-worker-deployment.yaml
    yaml-set \
        --change=spec.template.spec.containers[0].resources.limits.memory \
        --value=128Mi \
        gen/spark-worker-deployment.yaml
    yaml-set \
        --change=spec.template.spec.containers[0].resources.requests.cpu \
        --value=1 \
        gen/spark-worker-deployment.yaml
    yaml-set \
        --change=spec.template.spec.containers[0].resources.requests.memory \
        --value=128Mi \
        gen/spark-worker-deployment.yaml

    # Fix quoting
    for file in gen/*.yaml; do
        echo updating quoting in $file
        sed -i "" -e "s/\'\"/\"/g" -e "s/\"\'/\"/g" $file
    done
}
up () {
    if [ ! -d $SPUNK_HOME/gen ]; then
        gen
    fi
    kubectl apply -n $NAMESPACE -f gen/
}
down () {
    if [ ! -d $SPUNK_HOME/gen ]; then
        gen
    fi
    kubectl delete -n $NAMESPACE -f gen/
}
restart () {
    down
    up
}
clean () {
    rm -rf $SPUNK_HOME/gen
}

$*

exit 0
